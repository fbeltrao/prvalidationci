name: $(Build.SourceBranchName)_$(Build.Reason)_$(majorVersion).$(Build.BuildId)$(Rev:.r) # define here how the build will be named
variables:
  majorVersion: 1.0


# Define when to run it

# On PRs against master and dev
pr:
  branches:
    include:
    - master
    - dev
  
# Run on changes to master or dev
trigger:
  batch: true
  branches:
    include:
    - master
    - dev

# Define jobs
jobs:

# This job is always executed, static validation only
- job: build_and_static_validation
  displayName: Build and static validation
  continueOnError: false
  pool:
    vmImage: 'Ubuntu 16.04'
  
  steps:
  - bash: echo Build...
    displayName: 'Build goes here'

  - bash: echo run unit tests/coverage/code analysis...
    displayName: 'Unit tests / code coverage / code analysis goes here'

  # If reason build is started is "PullRequest"
  # Use GitHub API to check if PR has specific label ("fullci")
  # GitHub API: https://api.github.com/repos/{organization-or-name}/{project}/issues/{pr-number}
  # If found, set output variable prHasCILabel to true
  # echo "##vso[task.setvariable variable=prHasCILabel;isOutput=true]true"
  - bash: |
     echo "Looking for label at https://api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels"
     if curl -s "https://api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels" | grep '"name": "fullci"'
     then
       echo "##vso[task.setvariable variable=prHasCILabel;isOutput=true]true"
       echo "[INFO] fullci label found!"
     fi
    displayName: Check for CI label build on PR
    condition: eq(variables['Build.Reason'], 'PullRequest') # only run step if it is a PR
    name: checkPrLabel

# This job is executed only if:
# - Commit on master or dev
# - Validation of a PR with 'fullci' label
- job: full_ci
  displayName: Full CI
  dependsOn: build_and_static_validation # depends on previous job
  # conditions to run:
  #  - master/dev commit
  #  - pr with 'fullci' label
  condition: or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/dev'), eq(dependencies.build_and_static_validation.outputs['checkPrLabel.prHasCILabel'], true))
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - bash: echo Deploy...
    displayName: 'Add here deployment'

  - bash: echo run integration tests...
    displayName: 'Add here integration tests'